const mysql = require('mysql2/promise');
const config = require('./config/config.json');

async function checkAndFixDatabase() {
    console.log('üîç Veritabanƒ± yapƒ±sƒ± kontrol ediliyor...');
    
    try {
        const connection = await mysql.createConnection({
            host: config.development.host,
            user: config.development.username,
            password: config.development.password,
            database: config.development.database
        });

        console.log('‚úÖ Veritabanƒ±na baƒülandƒ±.');

        // T√ºm tablolarƒ± listele
        const [tables] = await connection.execute('SHOW TABLES');
        console.log('\nüìã Mevcut tablolar:');
        tables.forEach(table => {
            const tableName = Object.values(table)[0];
            console.log(`  - ${tableName}`);
        });

        // Her tablo i√ßin s√ºtunlarƒ± kontrol et ve eksik timestamp s√ºtunlarƒ±nƒ± ekle
        for (const table of tables) {
            const tableName = Object.values(table)[0];
            console.log(`\nüîß ${tableName} tablosu kontrol ediliyor...`);
            
            const [columns] = await connection.execute(`SHOW COLUMNS FROM ${tableName}`);
            const columnNames = columns.map(col => col.Field);
            
            let hasCreatedAt = columnNames.includes('createdAt');
            let hasUpdatedAt = columnNames.includes('updatedAt');
            
            console.log(`   Mevcut s√ºtunlar: ${columnNames.join(', ')}`);
            console.log(`   createdAt: ${hasCreatedAt ? '‚úÖ' : '‚ùå'}, updatedAt: ${hasUpdatedAt ? '‚úÖ' : '‚ùå'}`);
            
            // createdAt s√ºtunu ekle
            if (!hasCreatedAt) {
                console.log(`   üî® ${tableName} tablosuna createdAt ekleniyor...`);
                await connection.execute(`
                    ALTER TABLE ${tableName} 
                    ADD COLUMN createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
                `);
                console.log(`   ‚úÖ createdAt eklendi`);
            }
            
            // updatedAt s√ºtunu ekle
            if (!hasUpdatedAt) {
                console.log(`   üî® ${tableName} tablosuna updatedAt ekleniyor...`);
                await connection.execute(`
                    ALTER TABLE ${tableName} 
                    ADD COLUMN updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
                `);
                console.log(`   ‚úÖ updatedAt eklendi`);
            }
            
            if (hasCreatedAt && hasUpdatedAt) {
                console.log(`   ‚úÖ ${tableName} tamam`);
            }
        }

        await connection.end();
        console.log('\nüéâ Veritabanƒ± d√ºzeltme i≈ülemi tamamlandƒ±!');
        console.log('≈ûimdi uygulamayƒ± yeniden ba≈ülatƒ±n.');
        
    } catch (error) {
        console.error('‚ùå Hata:', error.message);
        process.exit(1);
    }
}

checkAndFixDatabase();
